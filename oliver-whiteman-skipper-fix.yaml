apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: ingress
rules:
- apiGroups:
  - extensions
  resources:
  - ingresses
  - ingresses/status
  verbs:
  - get
  - list
  - patch

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: skipper
rules:
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list

# kubectl create clusterrolebinding skipper --clusterrole=ingress --serviceaccount=kube-system:default -n kube-system
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: kube-system-default-user-role-binding-ingress
  namespace: kube-system
subjects:
  - kind: ServiceAccount
    name: default
    namespace: kube-system
roleRef:
  kind: ClusterRole
  name: ingress
  apiGroup: rbac.authorization.k8s.io

# kubectl create clusterrolebinding skipper --clusterrole=skipper --serviceaccount=kube-system:default -n kube-system
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: kube-system-default-user-role-binding-skipper
  namespace: kube-system
subjects:
  - kind: ServiceAccount
    name: default
    namespace: kube-system
roleRef:
  kind: ClusterRole
  name: skipper
  apiGroup: rbac.authorization.k8s.io
